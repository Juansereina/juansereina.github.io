---
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import Layout from '../../layouts/general.astro';
import { formatDate, readingTime } from '../../utils';

interface Props {
  entry: CollectionEntry<'blog'>;
}

export async function getStaticPaths() {
  const entries = await getCollection('blog');

  return entries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
const timeTobeRead = readingTime(entry.body);

const meta = {
  title: entry.data.title,
  description: entry.data.description,
  image: entry.data.image.src,
};
---

<Layout meta={meta}>
  <header class="header">
    <div class="flex mb-10">
      <img class="w-14 rounded-full mr-2" src="/images/profile.webp" alt="" />
      <div>
        <p>Juan Sebasti√°n Reina</p>
        <p class="text-sm">
          <a
            href="https://twitter.com/Juansereina_"
            target="_blank"
            rel="noreferrer noopener"
          >
            @Juansereina_
          </a>
        </p>
      </div>
    </div>
    <h1 class="title mb-2">{entry.data.title}</h1>
    <p class="mb-4">
      <time class="capitalize" datetime={entry.data.publishedAt.toISOString()}>
        {formatDate(entry.data.publishedAt)}
      </time>
      -
      {timeTobeRead} mins de lectura
    </p>
  </header>
  <main>
    <article class="post">
      <Content />
    </article>
  </main>
</Layout>

<style is:global>
  .header {
    @apply text-gray-300;
  }

  .post img {
    @apply lg:scale-110 lg:py-8;
  }

  .header a,
  .post a {
    @apply text-cyan-300 font-medium hover:underline decoration-cyan-300;
  }

  .header,
  .post h2,
  .post p,
  .post pre {
    @apply mb-6 md:mb-8 lg:mb-10;
  }

  .post > *:last-child {
    @apply m-0;
  }
</style>
